
--// Variables \\--

local Updated_On = "2022-12-28T01:35:14.267Z"

local Atlas = loadstring(game:HttpGet("https://siegehub.net/Atlas.lua"))()

local UI = Atlas.new({
    Name = "Ghost Hub | "..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name; 
    ConfigFolder = "";
    Credit = "Made By ronin#5376"; 
    Color = Color3.fromRGB(255,255,255); 
    Bind = "RightControl"; 
    UseLoader = true; 
})

local Main_Page = UI:CreatePage("Main")

local Esp_Page = UI:CreatePage("Esp")

local Misc_Page = UI:CreatePage("Misc")

local Info_Page = UI:CreatePage("Info")

local Info = Info_Page:CreateSection("Info")

local Main = Main_Page:CreateSection("Main")

local Esp = Esp_Page:CreateSection("Player Esp")

local Misc = Misc_Page:CreateSection("Misc")

--// Script \\--

local Updated = Info:CreateParagraph("The game hasn't been updated since this script was made") 
if game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Updated ~= Updated_On then
    Updated.Set("The game has been updated since this script was made some features might get you banned or are patched") 
end
local Creator = Info:CreateParagraph("Made by: ronin#5376") 
Info:CreateButton({
    Name = "Click To Copy Discord"; 
    Callback = function()
        setclipboard("https://discord.gg/4FGbzT5dsZ")
        toclipboard("https://discord.gg/4FGbzT5dsZ")
    end
})

getgenv().config = {
    Highlight_Esp = false;
    Highlight_Esp_Color = Color3.fromRGB(255,255,255);
    Highlight_Esp_Transparency = 0.5;
    Name_Esp = false;
    Name_Displacement = 5;
    Name_Esp_Color = Color3.fromRGB(255,255,255);
    Auto_Quest = false;
    Selected_Quest = nil;
    Selected_Stat = nil;
    Auto_Stat = false;
    Selected_Mob = nil;
    AutoFarm = false;
    Active_Players = {};
};

spawn(function()
    while task.wait() do
    pcall(function()
        local found = game:GetService("Workspace").Main.Live:WaitForChild(getgenv().config.Selected_Mob)
        if found and getgenv().config.AutoFarm and found:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = found:GetModelCFrame()*CFrame.new(0,-10,0)
            local args = {
                [1] = {
                    ["Victim"] = found,
                    ["Type"] = "Heavy",
                    ["LocalInfo"] = {
                        ["Flying"] = false
                    },
                    ["CurrentHeavy"] = 1,
                    ["CurrentLight"] = 1,
                    ["CurrentLightCombo"] = 1,
                    ["VictimPosition"] = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position,
                    ["AnimSet"] = "Yamcha"
                }
            }
            game:GetService("ReplicatedStorage").Events.TryAttack:FireServer(unpack(args))
        end
    end)
end
end);
spawn(function()
    while task.wait() do
        if getgenv().config.Auto_Quest then
            pcall(function()
                game:GetService("ReplicatedStorage").RemoteEvents.AcceptQuest:FireServer(true,getgenv().config.Selected_Quest.."1")
                task.wait(.05)
            end)
        end
    end
end);

spawn(function()
    while task.wait() do
        if getgenv().config.Auto_Stat then
            pcall(function()
                game:GetService("ReplicatedStorage").RemoteEvents.AttemptIncrementStatPoint:FireServer(getgenv().config.Selected_Stat,1)
                task.wait(.05)
            end)
        end
    end
end);

game.RunService.Heartbeat:Connect(function()
if getgenv().config.Highlight_Esp then
    for i,v in ipairs(game.Players:GetPlayers()) do
        if v~=game.Players.LocalPlayer then
            v=v.Character
            if not v:FindFirstChild("Highlight") and v:WaitForChild("HumanoidRootPart") then
                local Highlight = Instance.new("Highlight",v)
                Highlight.OutlineColor = Color3.fromRGB(0,0,0)
                Highlight.FillColor = Color3.fromRGB(255,0,0)
                Highlight.Enabled = true
                Highlight.FillTransparency = 0.5;
                Highlight.OutlineTransparency = 1
            elseif v:FindFirstChild("Highlight") then
                v:FindFirstChild("Highlight").Enabled = true
                v:FindFirstChild("Highlight").FillTransparency = getgenv().config.Highlight_Esp_Transparency
                v:FindFirstChild("Highlight").OutlineTransparency = 0.3
                v:FindFirstChild("Highlight").FillColor = getgenv().config.Highlight_Esp_Color
            end
        end
    end
end
end);

game.RunService.Heartbeat:Connect(function()
if getgenv().config.Name_Esp then
    for i,v in ipairs(game.Players:GetPlayers()) do
        if v~=game.Players.LocalPlayer then
            v=v.Character:WaitForChild("Head")
            if not v:FindFirstChild("BillboardGui") then
                local Text_Esp = Instance.new('BillboardGui', v)
                Text_Esp.Adornee = v
                Text_Esp.Size = UDim2.new(15,0,1,0)
                Text_Esp.StudsOffset = Vector3.new(0,5,0)
                Text_Esp.Parent = v
                Text_Esp.AlwaysOnTop = true
                local label_Name = Instance.new("TextLabel")
                label_Name.BackgroundTransparency = 1
                label_Name.Size = UDim2.new(1,0,1,0)
                label_Name.TextColor3 = Color3.new(1,1,1)
                label_Name.TextScaled = false
                label_Name.Text = tostring(v.Parent.Name.." | "..math.round(v.Parent.Humanoid.Health).."/"..math.round(v.Parent.Humanoid.MaxHealth))
                label_Name.Parent = Text_Esp
                label_Name.TextStrokeTransparency = 0.3
            elseif v:FindFirstChild("BillboardGui") then
                v:WaitForChild("BillboardGui").StudsOffset = Vector3.new(0,getgenv().config.Name_Displacement,0)
                v:WaitForChild("BillboardGui"):WaitForChild("TextLabel").TextColor3 = getgenv().config.Highlight_Esp_Color
                v:WaitForChild("BillboardGui"):WaitForChild("TextLabel").Text = tostring(v.Parent.Name.." | "..math.round(v.Parent.Humanoid.Health).."/"..math.round(v.Parent.Humanoid.MaxHealth))
            end
        end
    end
end
end);


--// Buttons \\--


--// Esp Buttons \\--
Esp:CreateToggle({ 
    Name = "Highlight Esp"; 
    Flag = "Highlight_Esp";
    Default = false; 
    Callback = function(bool)
    getgenv().config.Highlight_Esp = bool
    if bool == false then
        for i,v in ipairs(game.Players:GetPlayers()) do
            pcall(function()
            if v~=game.Players.LocalPlayer then
                v=v.Character
                if v:FindFirstChild("Highlight") then
                    v:FindFirstChild("Highlight").Parent = nil
                end
            end
        end)
    end
end
SavingDisabled = true;
end
});

Esp:CreateSlider({ 
    Name = "Highlight Transparency"; 
    Flag = "MySlider_highlight"; 
    Min = 0; 
    Max = 1;
    AllowOutOfRange = false;
    Digits = 1; 
    Default = 5; 
    Callback = function(Value)
        getgenv().config.Highlight_Esp_Transparency = Value
    end;
    SavingDisabled = true;
})

Esp:CreateColorPicker({
    Name = "Highlight Esp Color"; 
    Flag = "ColorPicker_highlight";
    Default = Color3.fromRGB(255,255,255); 
    Callback = function(newColor) 
        getgenv().config.Highlight_Esp_Color = newColor
    end;
})

Esp:CreateToggle({ 
    Name = "Name Esp"; 
    Flag = "Name_Esp";
    Default = false; 
    Callback = function(bool)
    getgenv().config.Name_Esp = bool
    if bool == false then
        for i,v in ipairs(game.Players:GetPlayers()) do
            pcall(function()
            if v~=game.Players.LocalPlayer then
                v=v.Character:WaitForChild("Head")
                if v:FindFirstChild("BillboardGui") then
                    v:FindFirstChild("BillboardGui").Parent = nil
                end
            end
        end)
    end
end  
SavingDisabled = true;
end;
})

Esp:CreateSlider({ 
    Name = "Name Displacement"; 
    Flag = "MySlider_name"; 
    Min = -10; 
    Max = 15;
    AllowOutOfRange = false;
    Digits = 2; 
    Default = 5; 
    Callback = function(Value)
        getgenv().config.Name_Displacement = Value
    end;
    SavingDisabled = true;
})

--// Misc Buttons \\--

Misc:CreateButton({
    Name = "No Fog"; 
    Callback = function()
        game:GetService("Lighting"):WaitForChild("Fog").Parent = nil    
    end

})

Misc:CreateButton({
    Name = "Full Bright"; 
    Callback = function()
        Lighting.Brightness = 2
	    Lighting.ClockTime = 14
	    Lighting.FogEnd = 100000
    	Lighting.GlobalShadows = false
    	Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128) 
    end
})

local ToggleUi = Misc:CreateParagraph("Right Ctrl Toggles The Ui") 

Misc:CreateButton({
    Name = "Destory Ui"; 
    Callback = function()
        UI:Destroy()
    end
})

--// Main Buttons \\--


local Quest_DropDown = Main:CreateDropdown({
    Name = "Choose Quest"; 
    Callback = function(item) 
        getgenv().config.Selected_Quest = item
    end;
    Options = {}; 
    ItemSelecting = true;
    SavingDisabled = true;
})

local quests = {}
for i,v in ipairs(game:GetService("Workspace").QuestGivers:GetChildren()) do
    table.insert(quests,v.Name)
    Quest_DropDown:Update(quests)
end

Main:CreateToggle({ 
    Name = "Auto Quest"; 
    Flag = "autoquest";
    Default = false; 
    Callback = function(bool)
        getgenv().config.Auto_Quest = bool
    end;
    SavingDisabled = true;
})

local Stat_DropDown = Main:CreateDropdown({
    Name = "Select Stat"; 
    Callback = function(item) 
        getgenv().config.Selected_Stat = item
    end;
    Options = {"Strength","KiPower","MaxHealth","Speed","MaxKi","Stamina"}; 
    ItemSelecting = true;
    SavingDisabled = true;
})

Main:CreateToggle({ 
    Name = "Auto Stat"; 
    Flag = "autostat";
    Default = false; 
    Callback = function(bool)
        getgenv().config.Auto_Stat = bool
    end;
    SavingDisabled = true;
})

local Mob_DropDown = Main:CreateDropdown({
    Name = "Select Mob"; 
    Callback = function(item) 
        getgenv().config.Selected_Mob = item
    end;
    Options = {}; 
    ItemSelecting = true;
    SavingDisabled = true;
})


local mobs = {}
game.RunService.Stepped:Connect(function()
for i,v in ipairs(game:GetService("Workspace").Main.Live:GetChildren()) do
if not table.find(mobs,v.Name) and not table.find(getgenv().config.Active_Players,v.Name) then
    table.insert(mobs,v.Name)
        Mob_DropDown:Update(mobs)
    end
end
end)

Main:CreateToggle({ 
    Name = "Farm Mob"; 
    Flag = "farm_mob";
    Default = false; 
    Callback = function(bool)
        getgenv().config.AutoFarm = bool
    end;
    SavingDisabled = true;
})

game.RunService.Stepped:Connect(function()
    pcall(function()
        for _,v in next, game.Players:GetPlayers() do
            if not table.find(getgenv().config.Active_Players,v.Name) then
                table.insert(getgenv().config.Active_Players,v.Name)  
            end
        end
    end)
end)
